#define MP_MAX_UNCOMPRESSED_TEXT_LEN (73)
MP_COMPRESSED_DATA("can'\364'%q\247objec\364argumen\364invali\344functio\356argument\363forma\364conver\364no\364mus\364t\357'%s\247keywor\344specifie\362strin\347typ\345b\345require\344fo\362positiona\354inde\370o\346attribut\345%\344\341ar\347empt\371implemente\344i\356isn'\364multipl\345UUI\304wit\350assignmen\364unknow\356erro\362generato\362lengt\350expecte\344fro\355comple\370doesn'\364fiel\344missin\347need\363n\357outsid\345rang\345tupl\345unsupporte\344conversio\356identifie\362%\363a\356i\363synta\370bu\364expectin\347ha\363in\364nam\345supporte\344to\357foun\344give\356nonloca\354sequenc\345allowe\344an\344defaul\364indice\363ou\364struct\272%\361characteristi\343dic\364lis\364zer\357Canno\364befor\345impor\364numbe\362shoul\344specificatio\356value\363incompatibl\345issubclass(\251afte\362byte\363clas\363ke\371loca\354non-keywor\344o\362se\364stor\345take\363valu\345allocatio\356descripto\362expressio\356implicitl\371incomplet\345unexpecte\344arg\363automati\343hav\345hea\360integers\254lon\347numberin\347operatio\356redefine\344sel\346instanc\345overflo\367pointer\241failed\254go\364intege\362suppor\364binar\371buffe\362divid\345inden\364manua\354memor\371")
MP_MATCH_COMPRESSED("%c needs int or char", "\377%c\255\274\336char")
MP_MATCH_COMPRESSED("%q index out of range", "\377\312\225\310\226\260")
MP_MATCH_COMPRESSED("%q indices must be integers, not %s", "\377\312\307\212\221\355\211\265")
MP_MATCH_COMPRESSED("%q() takes %d positional arguments but %d were given", "\377%q()\341\230\224\206\271\230were\301")
MP_MATCH_COMPRESSED("'%q' argument required", "\377\201\203\222")
MP_MATCH_COMPRESSED("'%s' object doesn't support item assignment", "\377\214\202\252\371item\242")
MP_MATCH_COMPRESSED("'%s' object doesn't support item deletion", "\377\214\202\252\371item deletion")
MP_MATCH_COMPRESSED("'%s' object has no attribute '%q'", "\377\214\202\273\256\227\201")
MP_MATCH_COMPRESSED("'%s' object isn't an iterator", "\377\214\202\236\266iterator")
MP_MATCH_COMPRESSED("'%s' object isn't callable", "\377\214\202\236callable")
MP_MATCH_COMPRESSED("'%s' object isn't iterable", "\377\214\202\236iterable")
MP_MATCH_COMPRESSED("'%s' object isn't subscriptable", "\377\214\202\236subscriptable")
MP_MATCH_COMPRESSED("'=' alignment not allowed in string format specifier", "\377'=' alignment\211\304\235\217\207\216")
MP_MATCH_COMPRESSED("'await' outside function", "\377'await'\257\205")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377'break'/'continue'\257loop")
MP_MATCH_COMPRESSED("'return' outside function", "\377'return'\257\205")
MP_MATCH_COMPRESSED("'yield' outside function", "\377'yield'\257\205")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377*x\212\221\242target")
MP_MATCH_COMPRESSED("0.0 to a complex power", "\3770.0\213\231\251power")
MP_MATCH_COMPRESSED("Argument is not a struct type!", "\377Argument\267\211\231struct type!")
MP_MATCH_COMPRESSED("Can't convert %s to %s!", "\377Can't\210\265\213%s!")
MP_MATCH_COMPRESSED("Cannot convert %s to pointer! (buffer does not represent a pointer)", "\377\317\210\265\213\365(buffer does\211represent\231pointer)")
MP_MATCH_COMPRESSED("Cannot convert '%s' to pointer!", "\377\317\210\214\213\365")
MP_MATCH_COMPRESSED("Cannot set field %s on struct %s!", "\377\317\337\253\265on struct %s!")
MP_MATCH_COMPRESSED("Cast argument must be a type!", "\377Cast\203\212\221\231type!")
MP_MATCH_COMPRESSED("I/O operation on closed file", "\377I/O\360on closed file")
MP_MATCH_COMPRESSED("IV", "IV")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377LHS\226\215\232\212\221\266id")
MP_MATCH_COMPRESSED("Struct argument is not an object!", "\377Struct\203\267\211\266object!")
MP_MATCH_COMPRESSED("UUID", "\377\240")
MP_MATCH_COMPRESSED("UUID too long", "\377\240\277\356")
MP_MATCH_COMPRESSED("UUID too short", "\377\240\277short")
MP_MATCH_COMPRESSED("[addrinfo error %d]", "\377[addrinfo\244%d]")
MP_MATCH_COMPRESSED("__init__() should return None, not '%s'", "\377__init__()\323return None,\211\214")
MP_MATCH_COMPRESSED("abort() called", "abort() called")
MP_MATCH_COMPRESSED("address %08x is not aligned to %d bytes", "\377address %08x\267\211aligned\213\230\331")
MP_MATCH_COMPRESSED("annotation must be an identifier", "\377annotation\212\221\266\264")
MP_MATCH_COMPRESSED("arg is an empty sequence", "\377\232\267\266\233\303")
MP_MATCH_COMPRESSED("arg must be user-type", "\377\232\212\221user-type")
MP_MATCH_COMPRESSED("argument name reused", "\377\203\275reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\203num/types mismatch")
MP_MATCH_COMPRESSED("argument should be a '%q' not a '%q'", "\377\203\323\221\231\201\211\231\201")
MP_MATCH_COMPRESSED("array/bytes required on right side", "\377array/bytes\222on right side")
MP_MATCH_COMPRESSED("attributes not supported yet", "\377attributes\211\276yet")
MP_MATCH_COMPRESSED("bad compile mode", "bad compile mode")
MP_MATCH_COMPRESSED("bad typecode", "bad typecode")
MP_MATCH_COMPRESSED("binary op %q not implemented", "\377\372op\312\211\234")
MP_MATCH_COMPRESSED("blksize % 16", "blksize % 16")
MP_MATCH_COMPRESSED("buffer too small", "\377\373\277small")
MP_MATCH_COMPRESSED("bytes value out of range", "\377\331\342\310\226\260")
MP_MATCH_COMPRESSED("can't add special method to already-subclassed class", "\377\200add special method\213already-subclassed\332")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\200assign\213\345")
MP_MATCH_COMPRESSED("can't cancel self", "\377\200cancel\362")
MP_MATCH_COMPRESSED("can't convert %s to complex", "\377\200\210\265\213\251")
MP_MATCH_COMPRESSED("can't convert %s to float", "\377\200\210\265\213float")
MP_MATCH_COMPRESSED("can't convert %s to int", "\377\200\210\265\213\274")
MP_MATCH_COMPRESSED("can't convert '%q' object to %q implicitly", "\377\200\210\201\202\213\312\346")
MP_MATCH_COMPRESSED("can't convert NaN to int", "\377\200\210NaN\213\274")
MP_MATCH_COMPRESSED("can't convert inf to int", "\377\200\210inf\213\274")
MP_MATCH_COMPRESSED("can't create '%q' instances", "\377\200create\201instances")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\200declare\302\235outer code")
MP_MATCH_COMPRESSED("can't delete expression", "\377\200delete\345")
MP_MATCH_COMPRESSED("can't do binary op between '%q' and '%q'", "\377\200do\372op between\201\305\201")
MP_MATCH_COMPRESSED("can't encrypt & decrypt", "\377\200encrypt & decrypt")
MP_MATCH_COMPRESSED("can't have multiple **x", "\377\200\353\237**x")
MP_MATCH_COMPRESSED("can't have multiple *x", "\377\200\353\237*x")
MP_MATCH_COMPRESSED("can't implicitly convert '%q' to 'bool'", "\377\200\346\210\201\213'bool'")
MP_MATCH_COMPRESSED("can't import name %q", "\377\200\321\275\312")
MP_MATCH_COMPRESSED("can't load from '%q'", "\377\200load\250\201")
MP_MATCH_COMPRESSED("can't load with '%q' index", "\377\200load\241\201\225")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\200perform relative\321")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\200send non-None\342\213\231just-started\245")
MP_MATCH_COMPRESSED("can't set attribute", "\377\200\337\227")
MP_MATCH_COMPRESSED("can't specify pos and kw args", "\377\200specify pos\305kw\351")
MP_MATCH_COMPRESSED("can't store '%q'", "\377\200\340\201")
MP_MATCH_COMPRESSED("can't store to '%q'", "\377\200\340\213\201")
MP_MATCH_COMPRESSED("can't store with '%q' index", "\377\200\340\241\201\225")
MP_MATCH_COMPRESSED("can't switch from automatic field numbering to manual field specification", "\377\200switch\250\352\253\357\213\376\253\324")
MP_MATCH_COMPRESSED("can't switch from manual field specification to automatic field numbering", "\377\200switch\250\376\253\324\213\352\253\357")
MP_MATCH_COMPRESSED("can't truncate-divide a complex number", "\377\200truncate-divide\231\251\322")
MP_MATCH_COMPRESSED("can't unambiguously get sizeof scalar", "\377\200unambiguously get sizeof scalar")
MP_MATCH_COMPRESSED("casting", "casting")
MP_MATCH_COMPRESSED("chr() arg not in range(0x110000)", "\377chr()\232\211\235range(0x110000)")
MP_MATCH_COMPRESSED("comparison of int and uint", "\377comparison\226\274\305uint")
MP_MATCH_COMPRESSED("complex divide by zero", "\377\251\374by\316")
MP_MATCH_COMPRESSED("compression header", "compression header")
MP_MATCH_COMPRESSED("conversion to object", "\377\263\213\202")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\306'except'\212\221last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377\314update\303\273wrong\246")
MP_MATCH_COMPRESSED("div/mod not implemented for uint", "\377div/mod\211\234\223uint")
MP_MATCH_COMPRESSED("divide by zero", "\377\374by\316")
MP_MATCH_COMPRESSED("don't know how to pass object to native function", "\377don't know how\213pass\202\213native\205")
MP_MATCH_COMPRESSED("empty", "\377\233")
MP_MATCH_COMPRESSED("empty heap", "\377\233\354")
MP_MATCH_COMPRESSED("empty separator", "\377\233separator")
MP_MATCH_COMPRESSED("end of format while looking for conversion specifier", "\377end\226\207while looking\223\263\216")
MP_MATCH_COMPRESSED("error in ffi_prep_cif", "\377\244\235ffi_prep_cif")
MP_MATCH_COMPRESSED("error in regex", "\377\244\235regex")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\212derive\250BaseException")
MP_MATCH_COMPRESSED("expected ':' after format specifier", "\377\247':'\330\207\216")
MP_MATCH_COMPRESSED("expecting a dict for keyword args", "\377\272\231\314\223\215\351")
MP_MATCH_COMPRESSED("expecting just a value for set", "\377\272just\231\342\223\337")
MP_MATCH_COMPRESSED("expecting key:value for dict", "\377\272key:value\223\314")
MP_MATCH_COMPRESSED("extra keyword arguments given", "\377extra\215\206\301")
MP_MATCH_COMPRESSED("extra positional arguments given", "\377extra\224\206\301")
MP_MATCH_COMPRESSED("ffi_prep_closure_loc", "ffi_prep_closure_loc")
MP_MATCH_COMPRESSED("format needs a dict", "\377\207\255\231\314")
MP_MATCH_COMPRESSED("format string didn't convert all arguments", "\377\207\217didn't\210all\206")
MP_MATCH_COMPRESSED("format string needs more arguments", "\377\207\217\255more\206")
MP_MATCH_COMPRESSED("full", "full")
MP_MATCH_COMPRESSED("function doesn't take keyword arguments", "\377\205\252take\215\206")
MP_MATCH_COMPRESSED("function expected at most %d arguments, got %d", "\377\205\247at most\230arguments,\367\230")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\205\367\237\325\223\203\201")
MP_MATCH_COMPRESSED("function missing %d required positional arguments", "\377\205\254\230\222\224\206")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\205\254keyword-only\203")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\205\254\222\215\203\201")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\205\254\222\224\203#%d")
MP_MATCH_COMPRESSED("function takes %d positional arguments but %d were given", "\377\205\341\230\224\206\271\230were\301")
MP_MATCH_COMPRESSED("generator already executing", "\377\245already executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\245ignored GeneratorExit")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\245raised StopIteration")
MP_MATCH_COMPRESSED("heap must be a list", "\377\354\212\221\231\315")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\264\361as global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\264\361as\302")
MP_MATCH_COMPRESSED("import * not at module level", "\377\321*\211at module level")
MP_MATCH_COMPRESSED("incompatible .mpy arch", "\377\326.mpy arch")
MP_MATCH_COMPRESSED("incompatible .mpy file", "\377\326.mpy file")
MP_MATCH_COMPRESSED("incomplete format", "\377\347\207")
MP_MATCH_COMPRESSED("incomplete format key", "\377\347\207\333")
MP_MATCH_COMPRESSED("incorrect padding", "incorrect padding")
MP_MATCH_COMPRESSED("indev instance needs to be created before callback is called!", "\377indev\363\255\213\221created\320callback\267called!")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\2322\212\221>= 2\305<= 36")
MP_MATCH_COMPRESSED("integer needed", "\377\370needed")
MP_MATCH_COMPRESSED("invalid UUID", "\377\204\240")
MP_MATCH_COMPRESSED("invalid addr", "\377\204addr")
MP_MATCH_COMPRESSED("invalid cert", "\377\204cert")
MP_MATCH_COMPRESSED("invalid char in UUID", "\377\204char\235\240")
MP_MATCH_COMPRESSED("invalid characteristic UUID", "\377\204\313\240")
MP_MATCH_COMPRESSED("invalid characteristic tuple", "\377\204\313\261")
MP_MATCH_COMPRESSED("invalid descriptor UUID", "\377\204\344\240")
MP_MATCH_COMPRESSED("invalid format specifier", "\377\204\207\216")
MP_MATCH_COMPRESSED("invalid handler", "\377\204handler")
MP_MATCH_COMPRESSED("invalid key", "\377\204\333")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\204micropython decorator")
MP_MATCH_COMPRESSED("invalid mktime usage", "\377\204mktime usage")
MP_MATCH_COMPRESSED("invalid service UUID", "\377\204service\240")
MP_MATCH_COMPRESSED("invalid syntax", "\377\204\270")
MP_MATCH_COMPRESSED("invalid syntax for number", "\377\204\270\223\322")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\327\2321\212\221\231\332")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\327\2322\212\221\231\332\336\231\261\226classes")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join expects\231\315\226str/bytes objects consistent\241\362\202")
MP_MATCH_COMPRESSED("key", "\377\333")
MP_MATCH_COMPRESSED("keyword argument(s) not yet implemented - use normal args instead", "\377\215argument(s)\211yet\234- use normal\351instead")
MP_MATCH_COMPRESSED("lhs and rhs should be compatible", "\377lhs\305rhs\323\221compatible")
MP_MATCH_COMPRESSED("local '%q' has type '%q' but source is '%q'", "\377\334\201\273\220\201\271source\267\201")
MP_MATCH_COMPRESSED("local '%q' used before type known", "\377\334\201used\320\220known")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377\334variable referenced\320\242")
MP_MATCH_COMPRESSED("math domain error", "\377math domain\244")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\377\343\366allocating %u\331")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\377\343\366\354\267locked")
MP_MATCH_COMPRESSED("mktime needs a tuple of length 8 or 9", "\377mktime\255\231\261\226\2468\3369")
MP_MATCH_COMPRESSED("mode", "mode")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\237*x\235\242")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\237bases\353\363lay-out conflict")
MP_MATCH_COMPRESSED("must query one param", "\377\212query one param")
MP_MATCH_COMPRESSED("must raise an object", "\377\212raise\266\202")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\212use\215\203\223\333\205")
MP_MATCH_COMPRESSED("name '%q' isn't defined", "\377\275\201\236defined")
MP_MATCH_COMPRESSED("name too long", "\377\275\277\356")
MP_MATCH_COMPRESSED("native yield", "native yield")
MP_MATCH_COMPRESSED("need more than %d values to unpack", "\377need more than\230\325\213unpack")
MP_MATCH_COMPRESSED("negative shift count", "negative shift count")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\256active exception\213reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\256binding\223\302\300")
MP_MATCH_COMPRESSED("no default seed", "\377\256\306seed")
MP_MATCH_COMPRESSED("no module named '%q'", "\377\256module named\201")
MP_MATCH_COMPRESSED("no such attribute", "\377\256such\227")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\203follows\306\203")
MP_MATCH_COMPRESSED("non-hex digit found", "\377non-hex digit\300")
MP_MATCH_COMPRESSED("non-keyword arg after */**", "\377\335\232\330*/**")
MP_MATCH_COMPRESSED("non-keyword arg after keyword arg", "\377\335\232\330\215\232")
MP_MATCH_COMPRESSED("object '%s' isn't a tuple or list", "\377\202\214\236\231\261\336\315")
MP_MATCH_COMPRESSED("object not in sequence", "\377\202\211\235\303")
MP_MATCH_COMPRESSED("object of type '%s' has no len()", "\377\202\226\220\214\273\256len()")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\202\241\373protocol\222")
MP_MATCH_COMPRESSED("odd-length string", "\377odd-length\217")
MP_MATCH_COMPRESSED("only slices with step=1 (aka None) are supported", "\377only slices\241step=1 (aka None) are\276")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord() expected a character, but string of length %d found", "\377ord()\247\231character,\271\217\226\246\230\300")
MP_MATCH_COMPRESSED("output too small", "\377output\277small")
MP_MATCH_COMPRESSED("overflow converting long int to machine word", "\377\364converting\356\274\213machine word")
MP_MATCH_COMPRESSED("pop from an empty set", "\377pop\250\266\233\337")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\250\233\315")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\267\233")
MP_MATCH_COMPRESSED("pow() with 3 arguments requires integers", "\377pow()\2413\206requires integers")
MP_MATCH_COMPRESSED("queue overflow", "\377queue\364")
MP_MATCH_COMPRESSED("requested length %d but object has length %d", "\377requested\246\230\271\202\273\246\230")
MP_MATCH_COMPRESSED("return expected '%q' but got '%q'", "\377return\247\201\271\367\201")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("schedule queue full", "schedule queue full")
MP_MATCH_COMPRESSED("sign not allowed in string format specifier", "\377sign\211\304\235\217\207\216")
MP_MATCH_COMPRESSED("sign not allowed with integer format specifier 'c'", "\377sign\211\304\241\370\207\216'c'")
MP_MATCH_COMPRESSED("single '}' encountered in format string", "\377single '}' encountered\235\207\217")
MP_MATCH_COMPRESSED("slice step can't be zero", "\377slice step\200\221\316")
MP_MATCH_COMPRESSED("splitting with sub-captures", "\377splitting\241sub-captures")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\307")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream\360\211\276")
MP_MATCH_COMPRESSED("string index out of range", "\377\217\225\310\226\260")
MP_MATCH_COMPRESSED("string indices must be integers, not %s", "\377\217\307\212\221\355\211\265")
MP_MATCH_COMPRESSED("struct: can't index", "\377\311\200\225")
MP_MATCH_COMPRESSED("struct: index out of range", "\377\311\225\310\226\260")
MP_MATCH_COMPRESSED("struct: no fields", "\377\311\256fields")
MP_MATCH_COMPRESSED("substring not found", "\377substring\211\300")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\200find\362")
MP_MATCH_COMPRESSED("syntax error in JSON", "\377\270\244\235JSON")
MP_MATCH_COMPRESSED("syntax error in uctypes descriptor", "\377\270\244\235uctypes\344")
MP_MATCH_COMPRESSED("too many values to unpack (expected %d)", "\377\277many\325\213unpack (expected %d)")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\261\225\310\226\260")
MP_MATCH_COMPRESSED("type '%q' isn't an acceptable base type", "\377\220\201\236\266acceptable base\220")
MP_MATCH_COMPRESSED("type object '%q' has no attribute '%q'", "\377\220\202\201\273\256\227\201")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\220\3411\3363\206")
MP_MATCH_COMPRESSED("unary op %q not implemented", "\377unary op\312\211\234")
MP_MATCH_COMPRESSED("unexpected indent", "\377\350\375")
MP_MATCH_COMPRESSED("unexpected keyword argument '%q'", "\377\350\215\203\201")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\275escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\252match any outer\375level")
MP_MATCH_COMPRESSED("unknown config param", "\377\243config param")
MP_MATCH_COMPRESSED("unknown conversion specifier %c", "\377\243\263\216%c")
MP_MATCH_COMPRESSED("unknown format code '%c' for object of type '%s'", "\377\243\207code '%c'\223\202\226\220\214")
MP_MATCH_COMPRESSED("unknown type", "\377\243\220")
MP_MATCH_COMPRESSED("unknown type '%q'", "\377\243\220\201")
MP_MATCH_COMPRESSED("unmatched '{' in format", "\377unmatched '{'\235\207")
MP_MATCH_COMPRESSED("unreadable attribute", "\377unreadable\227")
MP_MATCH_COMPRESSED("unsupported format character '%c' (0x%x) at index %d", "\377\262\207character '%c' (0x%x) at\225\230")
MP_MATCH_COMPRESSED("unsupported type for %q: '%s'", "\377\262\220\223%q:\214")
MP_MATCH_COMPRESSED("unsupported types for %q: '%s', '%s'", "\377\262types\223%q: '%s',\214")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377wrong\322\226\206")
MP_MATCH_COMPRESSED("zero step", "\377\316step")
// Total input length:      7026
// Total compressed length: 3356
// Total data length:       1168
// Predicted saving:        2502

// gzip length:             3908
// Percentage of gzip:      115.8%
// zlib length:             3896
// Percentage of zlib:      116.1%
