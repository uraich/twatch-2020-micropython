#!/usr/bin/python3
#WARNING: This Font Require X-GLCD Lib.
#         You can not use it with MikroE GLCD Lib.

#Font Generated by MikroElektronika GLCD Font Creator 1.2.0.0
#MikroElektronika 2011 
#http://www.mikroe.com 

#GLCD FontName : B
#Based on a font created by Reekee of Dimenzioned - reekee@00.co.uk
# GLCD FontSize : 17 x 15

def height():
    return 15

def width():
    return 17

def hmap():
    return False

def reverse():
    return False

def monospaced():
    return false

def min_ch():
    return 32
def max_ch():
    return 127


_font = \
b'\x09\x00\x00\x00\x0c\x00\x04\x04\x02\x0e\xfe\x0e\x7e\x0e\x7e\x04\x7c\x00\x3c\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x06\x00\x00\x00\x1c\x04\x3e\x0e\xfe\x0e\x7e\x0e\x1c\x04'\
b'\x06\x00\x00\x00\x3e\x00\x3e\x00\x00\x00\x3e\x00\x3e\x00'\
b'\x0b\x00\x00\x00\x90\x00\x90\x0f\xfe\x0f\xfe\x0f\xfe\x00\x90\x00\xd0\x0f\xbe\x00\x90\x00\x10\x00'\
b'\x09\x00\x00\x00\x3c\x04\x7c\x14\xfe\x0e\xfe\x09\xf2\x0f\xfe\x0f\xc3\x07\x84\x07'\
b'\x0c\x00\x3c\x00\x7e\x00\x7e\x00\x42\x08\x3c\x06\x80\x01\x60\x00\x98\x07\xc6\x0f\xc0\x0f\x40\x08\x80\x07'\
b'\x0c\x00\x00\x07\xbc\x0c\x7c\x08\xfe\x09\xfa\x0b\xf2\x07\xf2\x0f\xcc\x0f\x00\x0f\x80\x0e\x40\x0c\x40\x08'\
b'\x03\x00\x00\x00\x3e\x00\x3e\x00'\
b'\x05\x00\x00\x00\xf8\x0f\xfc\x1f\xfe\x3f\x02\x20'\
b'\x05\x00\x00\x00\x02\x20\xfe\x3f\xfc\x1f\xf8\x0f'\
b'\x05\x00\x04\x00\x3c\x00\x1e\x00\x2c\x00\x04\x00'\
b'\x09\x00\x80\x00\x80\x00\x80\x00\xf0\x07\xf0\x07\xf0\x07\x80\x00\x80\x00\x80\x00'\
b'\x06\x00\x00\x00\x00\x0c\x00\x2e\x00\x2e\x00\x3e\x00\x1c'\
b'\x06\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00'\
b'\x06\x00\x00\x00\x00\x04\x00\x0e\x00\x0e\x00\x0e\x00\x04'\
b'\x07\x00\x00\x30\x00\x0c\x00\x03\xc0\x00\x30\x00\x0c\x00\x02\x00'\
b'\x09\x00\x00\x00\xf0\x01\xfc\x07\xfe\x0f\xfe\x0f\xfe\x0f\x02\x08\x0c\x06\xf0\x01'\
b'\x08\x00\x00\x00\x08\x00\x08\x00\xfc\x0f\xfc\x0f\xfc\x0f\xfe\x0f\xfe\x0f'\
b'\x09\x00\x38\x08\x04\x0c\x02\x0f\xc2\x0f\xf2\x0f\xfe\x0f\xfe\x09\x7c\x08\x38\x08'\
b'\x09\x00\x00\x04\x04\x08\x02\x08\x22\x08\xfe\x0f\xde\x0f\xde\x0f\xdc\x07\x80\x03'\
b'\x0b\x00\x00\x02\x00\x03\x80\x02\x40\x02\xe0\x0f\xf0\x0f\xf8\x0f\xfc\x0f\xfe\x0f\x00\x02\x00\x02'\
b'\x09\x00\xc0\x03\x08\x04\x0e\x08\x0a\x08\xfa\x0f\xfa\x0f\xfa\x0f\xf2\x07\xe0\x03'\
b'\x09\x00\x00\x00\xf0\x01\xfc\x07\xfc\x0f\xfe\x0f\xfe\x0f\x22\x08\x24\x04\xc0\x03'\
b'\x0a\x00\x02\x00\x02\x08\x02\x0e\x82\x0f\xe2\x0f\xfa\x0f\xfe\x0f\xfe\x01\x3e\x00\x06\x00'\
b'\x09\x00\x00\x00\x38\x07\xfc\x08\xfe\x08\xfe\x09\xf2\x0d\xe2\x0f\xfc\x07\xc0\x03'\
b'\x09\x00\x00\x00\x78\x00\x84\x04\x82\x08\xfe\x0f\xfe\x0f\xfe\x07\xfc\x07\xf0\x01'\
b'\x06\x00\x00\x00\x20\x04\x70\x0e\x70\x0e\x70\x0e\x20\x04'\
b'\x06\x00\x00\x00\x20\x0c\x70\x2e\x70\x2e\x70\x3e\x20\x1c'\
b'\x08\x00\x00\x00\x40\x00\x60\x00\xe0\x00\xf0\x01\xd0\x01\x88\x03\x8c\x07'\
b'\x0a\x00\x00\x00\x20\x01\x20\x01\x20\x01\x20\x01\x20\x01\x20\x01\x20\x01\x20\x01\x20\x01'\
b'\x07\x00\x3c\x06\x38\x02\x70\x01\xf0\x01\xe0\x00\xc0\x00\x40\x00'\
b'\x09\x00\x00\x00\x0c\x00\x04\x04\x02\x0e\xfe\x0e\x7e\x0e\x7e\x04\x7c\x00\x3c\x00'\
b'\x0c\x00\x00\x00\xf0\x01\x08\x02\xe4\x04\xf2\x0d\x12\x09\xd2\x09\xf2\x09\xf2\x09\x04\x09\x8c\x05\xf0\x00'\
b'\x0d\x00\x00\x08\x00\x06\x00\x05\xc0\x04\x70\x04\xf8\x05\xfe\x07\xf8\x0f\xf0\x0f\xc0\x0f\x00\x0f\x00\x0e\x00\x08'\
b'\x0a\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x02\x08\x82\x08\x84\x0c\x78\x07'\
b'\x0b\x00\x00\x00\xf0\x01\xf8\x03\xfc\x07\xfe\x0f\xfe\x0f\x02\x08\x02\x08\x02\x04\x04\x06\x08\x01'\
b'\x0b\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x02\x08\x02\x08\x04\x04\x08\x02\xf0\x01'\
b'\x0b\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x12\x08\x12\x08\x12\x08\x12\x08\x12\x08'\
b'\x0a\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x12\x00\x12\x00\x12\x00\x12\x00'\
b'\x0b\x00\x00\x00\xf0\x01\xf8\x03\xfc\x07\xfe\x0f\xfe\x0f\x02\x08\x42\x08\x44\x04\x48\x02\xc0\x01'\
b'\x0b\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x20\x00\x20\x00\x20\x00\x20\x00\xfe\x0f'\
b'\x06\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f'\
b'\x09\x00\x00\x06\x00\x04\x00\x08\x00\x08\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x07\xfe\x03'\
b'\x0c\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x08\x00\x0c\x00\x34\x00\xc2\x00\x02\x03\x00\x0c'\
b'\x0b\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x00\x08\x00\x08\x00\x08\x00\x08\x00\x08'\
b'\x0f\x00\x00\x0c\x80\x03\xf0\x00\xfe\x01\xfc\x03\xf8\x07\xf0\x03\xc0\x00\xc0\x00\xf0\x07\xf8\x0f\xfe\x0f\xf0\x0f\x80\x0f\x00\x0c'\
b'\x0b\x00\x00\x00\xfe\x0f\x7c\x00\xfc\x00\xf8\x00\xf8\x01\xf0\x03\xf0\x03\xe0\x07\xc0\x07\xfe\x0f'\
b'\x0b\x00\x00\x00\xf0\x01\xf8\x03\xfc\x07\xfe\x0f\xfe\x0f\x02\x08\x02\x08\x04\x04\x08\x02\xf0\x01'\
b'\x0b\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x02\x02\x02\x02\x04\x02\x0c\x01\xf8\x00'\
b'\x0b\x00\x00\x00\xf0\x01\xf8\x03\xfc\x07\xfe\x0f\xfe\x0f\x02\x08\x02\x0a\x04\x0c\x08\x0e\xf0\x11'\
b'\x0b\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x02\x01\x02\x06\x04\x0e\x0c\x09\xf8\x00'\
b'\x09\x00\x00\x00\x38\x04\x7c\x08\xfe\x08\xfe\x0b\xfa\x0f\xe2\x0f\xc4\x07\x80\x03'\
b'\x0b\x00\x02\x00\x02\x00\x02\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x02\x00\x02\x00\x02\x00'\
b'\x0b\x00\x00\x00\xfe\x03\xfe\x07\xfe\x0f\xfe\x0f\xfe\x0f\x00\x08\x00\x08\x00\x08\x00\x04\xfe\x03'\
b'\x0d\x00\x02\x00\x0e\x00\x1e\x00\x7e\x00\xfe\x01\xfe\x03\xfc\x0f\xf0\x03\xc0\x01\x60\x00\x10\x00\x0c\x00\x02\x00'\
b'\x10\x00\x02\x00\x1e\x00\xfe\x00\xfe\x03\xfe\x1f\xfe\x07\xf0\x03\xc0\x00\xf0\x00\xf8\x03\xfe\x07\xf8\x1f\xf0\x03\xe0\x00\x18\x00\x06\x00'\
b'\x0c\x00\x02\x08\x0e\x04\x1e\x03\xfe\x00\xfe\x01\xfe\x03\xfc\x0f\xf0\x0f\xd8\x0f\x04\x0f\x02\x0e\x00\x08'\
b'\x0c\x00\x02\x00\x06\x00\x0e\x00\x3e\x00\x7e\x08\xfe\x06\xfc\x01\xf8\x00\x30\x00\x10\x00\x0c\x00\x02\x00'\
b'\x0b\x00\x00\x08\x02\x0e\x82\x0f\xe2\x0f\xfa\x0f\xfe\x0f\xfe\x0b\xfe\x08\x3e\x08\x0e\x08\x02\x08'\
b'\x06\x00\x00\x00\xfe\x3f\xfe\x3f\xfe\x3f\x02\x20\x02\x20'\
b'\x07\x00\x02\x00\x0c\x00\x30\x00\xc0\x00\x00\x01\x00\x06\x00\x08'\
b'\x05\x00\x02\x20\x02\x20\xfe\x3f\xfe\x3f\xfe\x3f'\
b'\x08\x00\xc0\x00\xf0\x00\xf8\x00\x3e\x00\x1c\x00\x30\x00\xc0\x00\x80\x00'\
b'\x08\x00\x00\x60\x00\x60\x00\x60\x00\x60\x00\x60\x00\x60\x00\x60\x00\x60'\
b'\x06\x00\x00\x00\x00\x00\x02\x00\x06\x00\x06\x00\x04\x00'\
b'\x0a\x00\x00\x00\x80\x07\xd0\x0f\xc8\x0f\xc8\x0f\x48\x08\xf8\x0f\xf8\x0f\xf8\x0f\xf0\x0f'\
b'\x0b\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x10\x04\x08\x08\xf8\x0f\xf8\x0f\xf0\x07\xe0\x03'\
b'\x08\x00\x00\x00\xe0\x03\xf0\x07\xf8\x0f\xf8\x0f\x08\x08\x18\x04\x30\x02'\
b'\x0b\x00\x00\x00\xe0\x03\xf0\x07\xf8\x0f\xf8\x0f\x08\x08\x10\x04\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f'\
b'\x09\x00\x00\x00\xe0\x03\xf0\x07\xf8\x0f\xf8\x0f\x88\x08\xf8\x08\xf0\x04\xe0\x02'\
b'\x07\x00\x08\x00\xfe\x0f\xfe\x0f\xff\x0f\xff\x0f\x09\x00\x0a\x00'\
b'\x08\x00\x00\x00\xe0\x2d\xf0\x4f\xf8\x4f\x08\x4e\xf8\x6f\xf4\x3d\xe0\x1c'\
b'\x0b\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\x10\x00\x08\x00\xf8\x0f\xf8\x0f\xf8\x0f\xf0\x0f'\
b'\x05\x00\x00\x00\xfb\x0f\xfb\x0f\xfb\x0f\xfb\x0f'\
b'\x05\x00\x00\x10\xfb\x1f\xfb\x1f\xfb\x1f\xfb\x07'\
b'\x0d\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f\xc0\x00\xe0\x01\xf0\x07\xf0\x0f\x88\x0f\x08\x0f\x00\x0c\x00\x08'\
b'\x05\x00\x00\x00\xfe\x0f\xfe\x0f\xfe\x0f\xfe\x0f'\
b'\x11\x00\x00\x00\xf8\x0f\xf8\x0f\xf8\x0f\xf8\x0f\x10\x00\x08\x00\xf8\x0f\xf8\x0f\xf8\x0f\xf0\x0f\x10\x00\x08\x00\xf8\x0f\xf8\x0f\xf8\x0f\xf0\x0f'\
b'\x0b\x00\x00\x00\xf8\x0f\xf8\x0f\xf8\x0f\xf8\x0f\x10\x00\x08\x00\xf8\x0f\xf8\x0f\xf8\x0f\xf0\x0f'\
b'\x09\x00\x00\x00\xe0\x03\xf0\x07\xf8\x0f\xf8\x0f\x08\x08\x08\x08\x10\x04\xe0\x03'\
b'\x0b\x00\x00\x00\xf8\x1f\xf8\x1f\xf8\x1f\xf8\x1f\x10\x02\x08\x04\xf8\x07\xf8\x07\xf0\x03\xe0\x01'\
b'\x0b\x00\x00\x00\xe0\x03\xf0\x07\xf8\x0f\xf8\x0f\x08\x08\x10\x04\xf8\x1f\xf8\x1f\xf8\x1f\xf8\x1f'\
b'\x08\x00\x00\x00\xf8\x0f\xf8\x0f\xf8\x0f\xf8\x0f\x10\x00\x08\x00\x08\x00'\
b'\x08\x00\x70\x04\xf0\x0c\xf8\x09\xe8\x09\xc8\x0b\xc8\x0f\x98\x07\x10\x07'\
b'\x07\x00\x08\x00\xfc\x07\xfc\x0f\xfe\x0f\xfe\x0f\x08\x0c\x08\x06'\
b'\x0b\x00\x00\x00\xf8\x07\xf8\x0f\xf8\x0f\xf8\x0f\x00\x08\x00\x08\xf8\x0f\xf8\x0f\xf8\x0f\xf8\x0f'\
b'\x0a\x00\x08\x00\x18\x00\x78\x00\xf8\x01\xf8\x03\xe0\x0f\xc0\x03\xc0\x00\x30\x00\x08\x00'\
b'\x0e\x00\x08\x00\x38\x00\xf8\x00\xf8\x03\xf8\x0f\xe0\x07\x80\x01\xc0\x00\xf0\x01\xf8\x07\xf0\x0f\xc0\x01\x60\x00\x18\x00'\
b'\x0b\x00\x08\x08\x18\x04\x38\x02\xf8\x01\xf8\x01\xf0\x07\xc0\x0f\xa0\x0f\x10\x0e\x08\x0c\x00\x08'\
b'\x0a\x00\x08\x00\x18\x00\x38\x08\xf8\x08\xf8\x09\xf0\x07\xc0\x01\x40\x00\x30\x00\x08\x00'\
b'\x0b\x00\x00\x08\x08\x0c\x08\x0e\x88\x0f\xc8\x0f\xe8\x0f\xf8\x09\xf8\x08\x78\x08\x18\x08\x08\x08'\
b'\x08\x00\x00\x00\x00\x00\x80\x00\x7c\x1f\x7e\x3f\x7e\x3f\x02\x20\x02\x20'\
b'\x05\x00\x00\x00\x00\x00\x00\x00\xfe\x7f\xfe\x7f'\
b'\x08\x00\x00\x00\x00\x00\x02\x20\x02\x20\x7e\x3f\x7e\x3f\x7c\x1f\x80\x00'\
b'\x09\x00\x00\x00\x00\x00\x80\x00\x60\x00\x60\x00\xe0\x00\xc0\x00\xc0\x00\x20\x00'\
b'\x00\x00'\


_index = \
b'\x00\x00\x14\x00\x28\x00\x36\x00\x44\x00\x5c\x00\x70\x00\x8a\x00'\
b'\xa4\x00\xac\x00\xb8\x00\xc4\x00\xd0\x00\xe4\x00\xf2\x00\x00\x01'\
b'\x0e\x01\x1e\x01\x32\x01\x44\x01\x58\x01\x6c\x01\x84\x01\x98\x01'\
b'\xac\x01\xc2\x01\xd6\x01\xea\x01\xf8\x01\x06\x02\x18\x02\x2e\x02'\
b'\x3e\x02\x52\x02\x6c\x02\x88\x02\x9e\x02\xb6\x02\xce\x02\xe6\x02'\
b'\xfc\x02\x14\x03\x2c\x03\x3a\x03\x4e\x03\x68\x03\x80\x03\xa0\x03'\
b'\xb8\x03\xd0\x03\xe8\x03\x00\x04\x18\x04\x2c\x04\x44\x04\x5c\x04'\
b'\x78\x04\x9a\x04\xb4\x04\xce\x04\xe6\x04\xf4\x04\x04\x05\x10\x05'\
b'\x22\x05\x34\x05\x42\x05\x58\x05\x70\x05\x82\x05\x9a\x05\xae\x05'\
b'\xbe\x05\xd0\x05\xe8\x05\xf4\x05\x00\x06\x1c\x06\x28\x06\x4c\x06'\
b'\x64\x06\x78\x06\x90\x06\xa8\x06\xba\x06\xcc\x06\xdc\x06\xf4\x06'\
b'\x0a\x07\x28\x07\x40\x07\x56\x07\x6e\x07\x80\x07\x8c\x07\x9e\x07'\
b'\xb2\x07\x00\x00\x00\x00'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - min_ch() + 1) if oc >= min_ch() and oc <= max_ch() else 0
    doff = ifb(_mvi[ioff : ])
    # print("ioff: %d, doff: %d"%(ioff,doff))
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((height() - 1)//8 + 1) * width
    # print("next_offs: ",next_offs)
    return _mvfont[doff + 2:next_offs], height(), width

if __name__ == "__main__":
    pixels,height,width=get_ch('A')
    print("width: {:d} height: {:d}".format(width,height))
    bytes_per_row = (height-1)//8 +1
    print("bytes_per_row: ",bytes_per_row)
    for i in range(width):
        ch = pixels[bytes_per_row*i]
        for j in range(bytes_per_row-1):
            ch |= pixels[2*i+j+1] << 8*(j+1)
        print("{:x}".format(ch))
        #print(hex(pixels[2*i])," ",hex(pixels[2*i+1]),end=" ")
        #print(hex(row)," ",end="")
    print("")
    for i in range(width):
        mask = 0x80 << (bytes_per_row-1)*8
        ch = pixels[bytes_per_row*i]
        for j in range(bytes_per_row-1):
            ch |= pixels[bytes_per_row*i+j+1] << 8*(j+1) 
        #print("pixel row",hex(ch))    
        for k in range(8*bytes_per_row):
            if (mask & ch):
                print('x ',end="")
            else:
                print('. ',end="")
            mask >>=1
        print("")


