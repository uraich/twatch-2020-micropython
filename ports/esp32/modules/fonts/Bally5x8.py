#!/usr/bin/python3
#WARNING: This Font Require X-GLCD Lib.
#         You can not use it with MikroE GLCD Lib.

#Font Generated by MikroElektronika GLCD Font Creator 1.2.0.0
#MikroElektronika 2011 
#http://www.mikroe.com 

#GLCD FontName : B
#Based on a font created by Reekee of Dimenzioned - reekee@00.co.uk
# GLCD FontSize : 5 x 8

def height():
    return 8

def width():
    return 5

def hmap():
    return False

def reverse():
    return False

def monospaced():
    return false

def min_ch():
    return 32
def max_ch():
    return 127


_font = \
b'\x05\x00\x02\x01\x51\x09\x06'\
b'\x05\x00\x00\x00\x00\x00\x00'\
b'\x05\x00\x00\x00\x5f\x00\x00'\
b'\x05\x00\x00\x07\x00\x07\x00'\
b'\x05\x00\x14\x7f\x14\x7f\x14'\
b'\x05\x00\x24\x2a\x6b\x2a\x12'\
b'\x05\x00\x23\x13\x08\x64\x62'\
b'\x05\x00\x36\x49\x55\x22\x50'\
b'\x05\x00\x00\x07\x07\x00\x00'\
b'\x05\x00\x00\x3e\x41\x00\x00'\
b'\x05\x00\x00\x00\x41\x3e\x00'\
b'\x05\x00\x22\x14\x08\x14\x22'\
b'\x05\x00\x08\x08\x3e\x08\x08'\
b'\x05\x00\x58\x38\x00\x00\x00'\
b'\x05\x00\x08\x08\x08\x08\x08'\
b'\x05\x00\x00\x60\x60\x00\x00'\
b'\x05\x00\x20\x10\x08\x04\x02'\
b'\x05\x00\x3e\x41\x41\x41\x3e'\
b'\x05\x00\x00\x42\x7f\x40\x00'\
b'\x05\x00\x72\x49\x49\x49\x46'\
b'\x05\x00\x22\x41\x49\x49\x36'\
b'\x05\x00\x18\x14\x12\x7f\x10'\
b'\x05\x00\x27\x45\x45\x45\x39'\
b'\x05\x00\x3c\x4a\x49\x49\x30'\
b'\x05\x00\x01\x71\x09\x05\x03'\
b'\x05\x00\x36\x49\x49\x49\x36'\
b'\x05\x00\x06\x49\x49\x29\x1e'\
b'\x05\x00\x00\x36\x36\x00\x00'\
b'\x05\x00\x00\x5b\x3b\x00\x00'\
b'\x05\x00\x08\x14\x22\x41\x00'\
b'\x05\x00\x14\x14\x14\x14\x14'\
b'\x05\x00\x00\x41\x22\x14\x08'\
b'\x05\x00\x02\x01\x51\x09\x06'\
b'\x05\x00\x3e\x41\x5d\x55\x1e'\
b'\x05\x00\x7e\x09\x09\x09\x7e'\
b'\x05\x00\x7f\x49\x49\x49\x36'\
b'\x05\x00\x3e\x41\x41\x41\x22'\
b'\x05\x00\x7f\x41\x41\x41\x3e'\
b'\x05\x00\x7f\x49\x49\x41\x41'\
b'\x05\x00\x7f\x09\x09\x01\x01'\
b'\x05\x00\x3e\x41\x41\x51\x72'\
b'\x05\x00\x7f\x08\x08\x08\x7f'\
b'\x05\x00\x00\x41\x7f\x41\x00'\
b'\x05\x00\x20\x40\x40\x40\x3f'\
b'\x05\x00\x7f\x08\x14\x22\x41'\
b'\x05\x00\x7f\x40\x40\x40\x40'\
b'\x05\x00\x7f\x02\x0c\x02\x7f'\
b'\x05\x00\x7f\x02\x04\x08\x7f'\
b'\x05\x00\x7f\x41\x41\x41\x7f'\
b'\x05\x00\x7f\x09\x09\x09\x06'\
b'\x05\x00\x3e\x41\x51\x21\x5e'\
b'\x05\x00\x7f\x09\x19\x29\x46'\
b'\x05\x00\x26\x49\x49\x49\x32'\
b'\x05\x00\x01\x01\x7f\x01\x01'\
b'\x05\x00\x3f\x40\x40\x40\x3f'\
b'\x05\x00\x07\x18\x60\x18\x07'\
b'\x05\x00\x7f\x20\x18\x20\x7f'\
b'\x05\x00\x63\x14\x08\x14\x63'\
b'\x05\x00\x03\x04\x78\x04\x03'\
b'\x05\x00\x61\x51\x49\x45\x43'\
b'\x05\x00\x7f\x41\x41\x00\x00'\
b'\x05\x00\x08\x08\x2a\x08\x08'\
b'\x05\x00\x00\x00\x41\x41\x7f'\
b'\x05\x00\x04\x02\x7f\x02\x04'\
b'\x05\x00\x10\x20\x7f\x20\x10'\
b'\x05\x00\x07\x05\x07\x00\x00'\
b'\x05\x00\x20\x54\x54\x54\x78'\
b'\x05\x00\x7f\x48\x44\x44\x38'\
b'\x05\x00\x38\x44\x44\x44\x20'\
b'\x05\x00\x38\x44\x44\x48\x7f'\
b'\x05\x00\x38\x54\x54\x54\x58'\
b'\x05\x00\x08\x7e\x09\x01\x02'\
b'\x05\x00\x0c\x52\x52\x52\x3e'\
b'\x05\x00\x7f\x08\x04\x04\x78'\
b'\x05\x00\x00\x48\x7a\x40\x00'\
b'\x05\x00\x20\x40\x44\x3d\x00'\
b'\x05\x00\x7f\x10\x28\x44\x00'\
b'\x05\x00\x00\x41\x7f\x40\x00'\
b'\x05\x00\x7c\x04\x18\x04\x78'\
b'\x05\x00\x7c\x08\x04\x04\x78'\
b'\x05\x00\x38\x44\x44\x44\x38'\
b'\x05\x00\x7c\x14\x14\x14\x08'\
b'\x05\x00\x08\x14\x14\x18\x7c'\
b'\x05\x00\x7c\x08\x04\x04\x08'\
b'\x05\x00\x48\x54\x54\x54\x20'\
b'\x05\x00\x04\x3f\x44\x40\x20'\
b'\x05\x00\x3c\x40\x40\x20\x7c'\
b'\x05\x00\x1c\x20\x40\x20\x1c'\
b'\x05\x00\x3c\x40\x30\x40\x3c'\
b'\x05\x00\x44\x28\x10\x28\x44'\
b'\x05\x00\x0c\x50\x50\x50\x3c'\
b'\x05\x00\x44\x64\x54\x4c\x44'\
b'\x05\x00\x08\x1c\x2a\x08\x08'\
b'\x05\x00\x00\x00\x7f\x00\x00'\
b'\x05\x00\x08\x08\x2a\x1c\x08'\
b'\x05\x00\x18\x04\x08\x10\x0c'\
b'\x05\x00\x3e\x00\x00\x00\x00'\


_index = \
b'\x00\x00\x07\x00\x0e\x00\x15\x00\x1c\x00\x23\x00\x2a\x00\x31\x00'\
b'\x38\x00\x3f\x00\x46\x00\x4d\x00\x54\x00\x5b\x00\x62\x00\x69\x00'\
b'\x70\x00\x77\x00\x7e\x00\x85\x00\x8c\x00\x93\x00\x9a\x00\xa1\x00'\
b'\xa8\x00\xaf\x00\xb6\x00\xbd\x00\xc4\x00\xcb\x00\xd2\x00\xd9\x00'\
b'\xe0\x00\xe7\x00\xee\x00\xf5\x00\xfc\x00\x03\x01\x0a\x01\x11\x01'\
b'\x18\x01\x1f\x01\x26\x01\x2d\x01\x34\x01\x3b\x01\x42\x01\x49\x01'\
b'\x50\x01\x57\x01\x5e\x01\x65\x01\x6c\x01\x73\x01\x7a\x01\x81\x01'\
b'\x88\x01\x8f\x01\x96\x01\x9d\x01\xa4\x01\xab\x01\xb2\x01\xb9\x01'\
b'\xc0\x01\xc7\x01\xce\x01\xd5\x01\xdc\x01\xe3\x01\xea\x01\xf1\x01'\
b'\xf8\x01\xff\x01\x06\x02\x0d\x02\x14\x02\x1b\x02\x22\x02\x29\x02'\
b'\x30\x02\x37\x02\x3e\x02\x45\x02\x4c\x02\x53\x02\x5a\x02\x61\x02'\
b'\x68\x02\x6f\x02\x76\x02\x7d\x02\x84\x02\x8b\x02\x92\x02\x99\x02'\
b'\xa0\x02\xa0\x02\x00\x00'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - min_ch() + 1) if oc >= min_ch() and oc <= max_ch() else 0
    doff = ifb(_mvi[ioff : ])
    # print("ioff: %d, doff: %d"%(ioff,doff))
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((height() - 1)//8 + 1) * width
    # print("next_offs: ",next_offs)
    return _mvfont[doff + 2:next_offs], height(), width

if __name__ == "__main__":
    pixels,height,width=get_ch('A')
    print("width: {:d} height: {:d}".format(width,height))
    bytes_per_row = (height-1)//8 +1
    print("bytes_per_row: ",bytes_per_row)
    for i in range(width):
        ch = pixels[bytes_per_row*i]
        for j in range(bytes_per_row-1):
            ch |= pixels[2*i+j+1] << 8*(j+1)
        print("{:x}".format(ch))
        #print(hex(pixels[2*i])," ",hex(pixels[2*i+1]),end=" ")
        #print(hex(row)," ",end="")
    print("")
    for i in range(width):
        mask = 0x80 << (bytes_per_row-1)*8
        ch = pixels[bytes_per_row*i]
        for j in range(bytes_per_row-1):
            ch |= pixels[bytes_per_row*i+j+1] << 8*(j+1) 
        #print("pixel row",hex(ch))    
        for k in range(8*bytes_per_row):
            if (mask & ch):
                print('x ',end="")
            else:
                print('. ',end="")
            mask >>=1
        print("")


