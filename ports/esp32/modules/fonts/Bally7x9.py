#!/usr/bin/python3
#WARNING: This Font Require X-GLCD Lib.
#         You can not use it with MikroE GLCD Lib.

#Font Generated by MikroElektronika GLCD Font Creator 1.2.0.0
#MikroElektronika 2011 
#http://www.mikroe.com 

#GLCD FontName : B
#Based on a font created by Reekee of Dimenzioned - reekee@00.co.uk
# GLCD FontSize : 7 x 9

def height():
    return 9

def width():
    return 7

def hmap():
    return False

def reverse():
    return False

def monospaced():
    return false

def min_ch():
    return 32
def max_ch():
    return 127


_font = \
b'\x06\x00\x00\x00\x04\x00\x02\x00\xa2\x00\x12\x00\x0c\x00'\
b'\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x04\x00\x00\x00\x00\x00\x00\x00\xbe\x00'\
b'\x05\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x0e\x00'\
b'\x06\x00\x00\x00\x28\x00\xfe\x00\x28\x00\xfe\x00\x28\x00'\
b'\x06\x00\x00\x00\x48\x00\x54\x00\xd6\x00\x54\x00\x24\x00'\
b'\x06\x00\x00\x00\x46\x00\x26\x00\x10\x00\xc8\x00\xc4\x00'\
b'\x06\x00\x00\x00\x6c\x00\x92\x00\xaa\x00\x44\x00\xa0\x00'\
b'\x04\x00\x00\x00\x00\x00\x0e\x00\x0e\x00'\
b'\x04\x00\x00\x00\x00\x00\x7c\x00\x82\x00'\
b'\x05\x00\x00\x00\x00\x00\x00\x00\x82\x00\x7c\x00'\
b'\x06\x00\x00\x00\x44\x00\x28\x00\x10\x00\x28\x00\x44\x00'\
b'\x06\x00\x00\x00\x10\x00\x10\x00\x7c\x00\x10\x00\x10\x00'\
b'\x03\x00\x00\x00\xb0\x00\x70\x00'\
b'\x06\x00\x00\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00'\
b'\x03\x00\x00\x00\xc0\x00\xc0\x00'\
b'\x06\x00\x00\x00\x40\x00\x20\x00\x10\x00\x08\x00\x04\x00'\
b'\x06\x00\x00\x00\x7c\x00\x82\x00\x82\x00\x82\x00\x7c\x00'\
b'\x05\x00\x00\x00\x00\x00\x84\x00\xfe\x00\x80\x00'\
b'\x06\x00\x00\x00\xe4\x00\x92\x00\x92\x00\x92\x00\x8c\x00'\
b'\x06\x00\x00\x00\x44\x00\x82\x00\x92\x00\x92\x00\x6c\x00'\
b'\x06\x00\x00\x00\x30\x00\x28\x00\x24\x00\xfe\x00\x20\x00'\
b'\x06\x00\x00\x00\x4e\x00\x8a\x00\x8a\x00\x8a\x00\x72\x00'\
b'\x06\x00\x00\x00\x78\x00\x94\x00\x92\x00\x92\x00\x60\x00'\
b'\x06\x00\x00\x00\x02\x00\xe2\x00\x12\x00\x0a\x00\x06\x00'\
b'\x06\x00\x00\x00\x6c\x00\x92\x00\x92\x00\x92\x00\x6c\x00'\
b'\x06\x00\x00\x00\x0c\x00\x92\x00\x92\x00\x52\x00\x3c\x00'\
b'\x04\x00\x00\x00\x00\x00\x6c\x00\x6c\x00'\
b'\x04\x00\x00\x00\x00\x00\xb6\x00\x76\x00'\
b'\x05\x00\x00\x00\x10\x00\x28\x00\x44\x00\x82\x00'\
b'\x06\x00\x00\x00\x28\x00\x28\x00\x28\x00\x28\x00\x28\x00'\
b'\x06\x00\x00\x00\x00\x00\x82\x00\x44\x00\x28\x00\x10\x00'\
b'\x06\x00\x00\x00\x04\x00\x02\x00\xa2\x00\x12\x00\x0c\x00'\
b'\x06\x00\x00\x00\x7c\x00\x82\x00\xba\x00\xaa\x00\x3c\x00'\
b'\x06\x00\x00\x00\xfc\x00\x12\x00\x12\x00\x12\x00\xfc\x00'\
b'\x06\x00\x00\x00\xfe\x00\x92\x00\x92\x00\x92\x00\x6c\x00'\
b'\x06\x00\x00\x00\x7c\x00\x82\x00\x82\x00\x82\x00\x44\x00'\
b'\x06\x00\x00\x00\xfe\x00\x82\x00\x82\x00\x82\x00\x7c\x00'\
b'\x06\x00\x00\x00\xfe\x00\x92\x00\x92\x00\x82\x00\x82\x00'\
b'\x06\x00\x00\x00\xfe\x00\x12\x00\x12\x00\x02\x00\x02\x00'\
b'\x06\x00\x00\x00\x7c\x00\x82\x00\x82\x00\xa2\x00\xe4\x00'\
b'\x06\x00\x00\x00\xfe\x00\x10\x00\x10\x00\x10\x00\xfe\x00'\
b'\x05\x00\x00\x00\x00\x00\x82\x00\xfe\x00\x82\x00'\
b'\x06\x00\x00\x00\x40\x00\x80\x00\x80\x00\x80\x00\x7e\x00'\
b'\x06\x00\x00\x00\xfe\x00\x10\x00\x28\x00\x44\x00\x82\x00'\
b'\x06\x00\x00\x00\xfe\x00\x80\x00\x80\x00\x80\x00\x80\x00'\
b'\x06\x00\x00\x00\xfe\x00\x04\x00\x18\x00\x04\x00\xfe\x00'\
b'\x06\x00\x00\x00\xfe\x00\x04\x00\x08\x00\x10\x00\xfe\x00'\
b'\x06\x00\x00\x00\xfe\x00\x82\x00\x82\x00\x82\x00\xfe\x00'\
b'\x06\x00\x00\x00\xfe\x00\x12\x00\x12\x00\x12\x00\x0c\x00'\
b'\x06\x00\x00\x00\x7c\x00\x82\x00\xa2\x00\x42\x00\xbc\x00'\
b'\x06\x00\x00\x00\xfe\x00\x12\x00\x32\x00\x52\x00\x8c\x00'\
b'\x06\x00\x00\x00\x4c\x00\x92\x00\x92\x00\x92\x00\x64\x00'\
b'\x06\x00\x00\x00\x02\x00\x02\x00\xfe\x00\x02\x00\x02\x00'\
b'\x06\x00\x00\x00\x7e\x00\x80\x00\x80\x00\x80\x00\x7e\x00'\
b'\x06\x00\x00\x00\x0e\x00\x30\x00\xc0\x00\x30\x00\x0e\x00'\
b'\x06\x00\x00\x00\xfe\x00\x40\x00\x30\x00\x40\x00\xfe\x00'\
b'\x06\x00\x00\x00\xc6\x00\x28\x00\x10\x00\x28\x00\xc6\x00'\
b'\x06\x00\x00\x00\x06\x00\x08\x00\xf0\x00\x08\x00\x06\x00'\
b'\x06\x00\x00\x00\xc2\x00\xa2\x00\x92\x00\x8a\x00\x86\x00'\
b'\x04\x00\x00\x00\xfe\x00\x82\x00\x82\x00'\
b'\x06\x00\x00\x00\x10\x00\x10\x00\x54\x00\x10\x00\x10\x00'\
b'\x06\x00\x00\x00\x00\x00\x00\x00\x82\x00\x82\x00\xfe\x00'\
b'\x06\x00\x00\x00\x08\x00\x04\x00\xfe\x00\x04\x00\x08\x00'\
b'\x06\x00\x00\x00\x20\x00\x40\x00\xfe\x00\x40\x00\x20\x00'\
b'\x04\x00\x00\x00\x0e\x00\x0a\x00\x0e\x00'\
b'\x06\x00\x00\x00\x40\x00\xa8\x00\xa8\x00\xa8\x00\xf0\x00'\
b'\x06\x00\x00\x00\xfe\x00\x90\x00\x88\x00\x88\x00\x70\x00'\
b'\x06\x00\x00\x00\x70\x00\x88\x00\x88\x00\x88\x00\x40\x00'\
b'\x06\x00\x00\x00\x70\x00\x88\x00\x88\x00\x90\x00\xfe\x00'\
b'\x06\x00\x00\x00\x70\x00\xa8\x00\xa8\x00\xa8\x00\xb0\x00'\
b'\x06\x00\x00\x00\x10\x00\xfc\x00\x12\x00\x02\x00\x04\x00'\
b'\x06\x00\x00\x00\x18\x00\xa4\x00\xa4\x00\xa4\x00\x7c\x00'\
b'\x06\x00\x00\x00\xfe\x00\x10\x00\x08\x00\x08\x00\xf0\x00'\
b'\x05\x00\x00\x00\x00\x00\x90\x00\xf4\x00\x80\x00'\
b'\x05\x00\x00\x00\x40\x00\x80\x00\x88\x00\x7a\x00'\
b'\x05\x00\x00\x00\xfe\x00\x20\x00\x50\x00\x88\x00'\
b'\x05\x00\x00\x00\x00\x00\x82\x00\xfe\x00\x80\x00'\
b'\x06\x00\x00\x00\xf8\x00\x08\x00\x30\x00\x08\x00\xf0\x00'\
b'\x06\x00\x00\x00\xf8\x00\x10\x00\x08\x00\x08\x00\xf0\x00'\
b'\x06\x00\x00\x00\x70\x00\x88\x00\x88\x00\x88\x00\x70\x00'\
b'\x06\x00\x00\x00\xf8\x00\x28\x00\x28\x00\x28\x00\x10\x00'\
b'\x06\x00\x00\x00\x10\x00\x28\x00\x28\x00\x30\x00\xf8\x00'\
b'\x06\x00\x00\x00\xf8\x00\x10\x00\x08\x00\x08\x00\x10\x00'\
b'\x06\x00\x00\x00\x90\x00\xa8\x00\xa8\x00\xa8\x00\x40\x00'\
b'\x06\x00\x00\x00\x08\x00\x7e\x00\x88\x00\x80\x00\x40\x00'\
b'\x06\x00\x00\x00\x78\x00\x80\x00\x80\x00\x40\x00\xf8\x00'\
b'\x06\x00\x00\x00\x38\x00\x40\x00\x80\x00\x40\x00\x38\x00'\
b'\x06\x00\x00\x00\x78\x00\x80\x00\x60\x00\x80\x00\x78\x00'\
b'\x06\x00\x00\x00\x88\x00\x50\x00\x20\x00\x50\x00\x88\x00'\
b'\x06\x00\x00\x00\x18\x00\xa0\x00\xa0\x00\xa0\x00\x78\x00'\
b'\x06\x00\x00\x00\x88\x00\xc8\x00\xa8\x00\x98\x00\x88\x00'\
b'\x06\x00\x00\x00\x10\x00\x38\x00\x54\x00\x10\x00\x10\x00'\
b'\x04\x00\x00\x00\x00\x00\x00\x00\xfe\x00'\
b'\x06\x00\x00\x00\x10\x00\x10\x00\x54\x00\x38\x00\x10\x00'\
b'\x06\x00\x00\x00\x30\x00\x08\x00\x10\x00\x20\x00\x18\x00'\
b'\x02\x00\x7c\x00\x7c\x00'\


_index = \
b'\x00\x00\x0e\x00\x18\x00\x22\x00\x2e\x00\x3c\x00\x4a\x00\x58\x00'\
b'\x66\x00\x70\x00\x7a\x00\x86\x00\x94\x00\xa2\x00\xaa\x00\xb8\x00'\
b'\xc0\x00\xce\x00\xdc\x00\xe8\x00\xf6\x00\x04\x01\x12\x01\x20\x01'\
b'\x2e\x01\x3c\x01\x4a\x01\x58\x01\x62\x01\x6c\x01\x78\x01\x86\x01'\
b'\x94\x01\xa2\x01\xb0\x01\xbe\x01\xcc\x01\xda\x01\xe8\x01\xf6\x01'\
b'\x04\x02\x12\x02\x20\x02\x2c\x02\x3a\x02\x48\x02\x56\x02\x64\x02'\
b'\x72\x02\x80\x02\x8e\x02\x9c\x02\xaa\x02\xb8\x02\xc6\x02\xd4\x02'\
b'\xe2\x02\xf0\x02\xfe\x02\x0c\x03\x1a\x03\x24\x03\x32\x03\x40\x03'\
b'\x4e\x03\x5c\x03\x66\x03\x74\x03\x82\x03\x90\x03\x9e\x03\xac\x03'\
b'\xba\x03\xc8\x03\xd6\x03\xe2\x03\xee\x03\xfa\x03\x06\x04\x14\x04'\
b'\x22\x04\x30\x04\x3e\x04\x4c\x04\x5a\x04\x68\x04\x76\x04\x84\x04'\
b'\x92\x04\xa0\x04\xae\x04\xbc\x04\xca\x04\xd8\x04\xe2\x04\xf0\x04'\
b'\xfe\x04\xf6\x04\x00\x00'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - min_ch() + 1) if oc >= min_ch() and oc <= max_ch() else 0
    doff = ifb(_mvi[ioff : ])
    # print("ioff: %d, doff: %d"%(ioff,doff))
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((height() - 1)//8 + 1) * width
    # print("next_offs: ",next_offs)
    return _mvfont[doff + 2:next_offs], height(), width

if __name__ == "__main__":
    pixels,height,width=get_ch('A')
    print("width: {:d} height: {:d}".format(width,height))
    bytes_per_row = (height-1)//8 +1
    print("bytes_per_row: ",bytes_per_row)
    for i in range(width):
        ch = pixels[bytes_per_row*i]
        for j in range(bytes_per_row-1):
            ch |= pixels[2*i+j+1] << 8*(j+1)
        print("{:x}".format(ch))
        #print(hex(pixels[2*i])," ",hex(pixels[2*i+1]),end=" ")
        #print(hex(row)," ",end="")
    print("")
    for i in range(width):
        mask = 0x80 << (bytes_per_row-1)*8
        ch = pixels[bytes_per_row*i]
        for j in range(bytes_per_row-1):
            ch |= pixels[bytes_per_row*i+j+1] << 8*(j+1) 
        #print("pixel row",hex(ch))    
        for k in range(8*bytes_per_row):
            if (mask & ch):
                print('x ',end="")
            else:
                print('. ',end="")
            mask >>=1
        print("")


